const properties = [
  // Typography
  { prefix: 'text-', cssProperty: 'font-size', variablePrefix: 'fontSize', requiresRemAdjustment: true },
  { prefix: 'font-', cssProperty: 'font-weight', variablePrefix: 'fontWeight', requiresRemAdjustment: false },
  { prefix: 'leading-', cssProperty: 'line-height', variablePrefix: 'lineHeight', requiresRemAdjustment: true },
  { prefix: 'tracking-', cssProperty: 'letter-spacing', variablePrefix: 'letterSpacing', requiresRemAdjustment: true },
  { prefix: 'decoration-', cssProperty: 'text-decoration-thickness', variablePrefix: 'textDecorationThickness', requiresRemAdjustment: true },
  { prefix: 'underline-offset-', cssProperty: 'text-underline-offset', variablePrefix: 'textUnderlineOffset', requiresRemAdjustment: true },
  { prefix: 'text-shadow-', cssProperty: 'text-shadow', variablePrefix: 'textShadow', requiresRemAdjustment: true },
  { prefix: 'text-edge-', cssProperty: 'text-edge', variablePrefix: 'textEdge', requiresRemAdjustment: false },
  { prefix: 'text-indent-edge-', cssProperty: 'text-indent-edge', variablePrefix: 'textIndentEdge', requiresRemAdjustment: true },
  { prefix: 'text-justify-', cssProperty: 'text-justify', variablePrefix: 'textJustify', requiresRemAdjustment: false },
  { prefix: 'text-align-last-', cssProperty: 'text-align-last', variablePrefix: 'textAlignLast', requiresRemAdjustment: false },
  { prefix: 'text-emphasis-position-', cssProperty: 'text-emphasis-position', variablePrefix: 'textEmphasisPosition', requiresRemAdjustment: false },
  { prefix: 'text-overflow-', cssProperty: 'text-overflow', variablePrefix: 'textOverflow', requiresRemAdjustment: false },
  { prefix: 'text-size-adjust-', cssProperty: 'text-size-adjust', variablePrefix: 'textSizeAdjust', requiresRemAdjustment: false },
  { prefix: 'text-wrap-mode-', cssProperty: 'text-wrap-mode', variablePrefix: 'textWrapMode', requiresRemAdjustment: false },
  { prefix: 'text-spacing-', cssProperty: 'text-spacing', variablePrefix: 'textSpacing', requiresRemAdjustment: false },
  { prefix: 'font-variation-', cssProperty: 'font-variation-settings', variablePrefix: 'fontVariationSettings', requiresRemAdjustment: false },
  { prefix: 'font-optical-sizing-', cssProperty: 'font-optical-sizing', variablePrefix: 'fontOpticalSizing', requiresRemAdjustment: false },
  { prefix: 'font-feature-', cssProperty: 'font-feature-settings', variablePrefix: 'fontFeatureSettings', requiresRemAdjustment: false },
  { prefix: 'font-kerning-', cssProperty: 'font-kerning', variablePrefix: 'fontKerning', requiresRemAdjustment: false },
  { prefix: 'font-palette-', cssProperty: 'font-palette', variablePrefix: 'fontPalette', requiresRemAdjustment: false },
  { prefix: 'font-stretch-', cssProperty: 'font-stretch', variablePrefix: 'fontStretch', requiresRemAdjustment: false },
  { prefix: 'font-synthesis-', cssProperty: 'font-synthesis', variablePrefix: 'fontSynthesis', requiresRemAdjustment: false },
  { prefix: 'hyphenate-character-', cssProperty: 'hyphenate-character', variablePrefix: 'hyphenateCharacter', requiresRemAdjustment: false },
  { prefix: 'hyphenate-limit-chars-', cssProperty: 'hyphenate-limit-chars', variablePrefix: 'hyphenateLimitChars', requiresRemAdjustment: false },
  { prefix: 'initial-letter-', cssProperty: 'initial-letter', variablePrefix: 'initialLetter', requiresRemAdjustment: false },

  // Spacing and Sizing
  { prefix: 'p-', cssProperty: 'padding', variablePrefix: 'padding', requiresRemAdjustment: true },
  { prefix: 'pt-', cssProperty: 'padding-top', variablePrefix: 'paddingTop', requiresRemAdjustment: true },
  { prefix: 'pb-', cssProperty: 'padding-bottom', variablePrefix: 'paddingBottom', requiresRemAdjustment: true },
  { prefix: 'pl-', cssProperty: 'padding-left', variablePrefix: 'paddingLeft', requiresRemAdjustment: true },
  { prefix: 'pr-', cssProperty: 'padding-right', variablePrefix: 'paddingRight', requiresRemAdjustment: true },
  { prefix: 'm-', cssProperty: 'margin', variablePrefix: 'margin', requiresRemAdjustment: true },
  { prefix: 'mt-', cssProperty: 'margin-top', variablePrefix: 'marginTop', requiresRemAdjustment: true },
  { prefix: 'mb-', cssProperty: 'margin-bottom', variablePrefix: 'marginBottom', requiresRemAdjustment: true },
  { prefix: 'ml-', cssProperty: 'margin-left', variablePrefix: 'marginLeft', requiresRemAdjustment: true },
  { prefix: 'mr-', cssProperty: 'margin-right', variablePrefix: 'marginRight', requiresRemAdjustment: true },
  { prefix: 'w-', cssProperty: 'width', variablePrefix: 'width', requiresRemAdjustment: 'true' },
  { prefix: 'h-', cssProperty: 'height', variablePrefix: 'height', requiresRemAdjustment: true },
  { prefix: 'min-w-', cssProperty: 'min-width', variablePrefix: 'minWidth', requiresRemAdjustment: true },
  { prefix: 'max-w-', cssProperty: 'max-width', variablePrefix: 'maxWidth', requiresRemAdjustment: true },
  { prefix: 'min-h-', cssProperty: 'min-height', variablePrefix: 'minHeight', requiresRemAdjustment: true },
  { prefix: 'max-h-', cssProperty: 'max-height', variablePrefix: 'maxHeight', requiresRemAdjustment: true },
  { prefix: 'gap-', cssProperty: 'gap', variablePrefix: 'gap', requiresRemAdjustment: true },
  { prefix: 'col-gap-', cssProperty: 'column-gap', variablePrefix: 'columnGap', requiresRemAdjustment: true },
  { prefix: 'row-gap-', cssProperty: 'row-gap', variablePrefix: 'rowGap', requiresRemAdjustment: true },

  // Borders and Shadows
  { prefix: 'border-', cssProperty: 'border-width', variablePrefix: 'borderWidth', requiresRemAdjustment: true },
  { prefix: 'rounded-', cssProperty: 'border-radius', variablePrefix: 'borderRadius', requiresRemAdjustment: true },
  { prefix: 'shadow-', cssProperty: 'box-shadow', variablePrefix: 'boxShadow', requiresRemAdjustment: true },
  { prefix: 'drop-shadow-', cssProperty: 'drop-shadow', variablePrefix: 'dropShadow', requiresRemAdjustment: true },
  { prefix: 'outline-', cssProperty: 'outline-width', variablePrefix: 'outlineWidth', requiresRemAdjustment: true },
  { prefix: 'ring-', cssProperty: 'ring-width', variablePrefix: 'ringWidth', requiresRemAdjustment: true },
  { prefix: 'ring-offset-', cssProperty: 'ring-offset-width', variablePrefix: 'ringOffsetWidth', requiresRemAdjustment: true },
  { prefix: 'border-image-width-', cssProperty: 'border-image-width', variablePrefix: 'borderImageWidth', requiresRemAdjustment: true },
  { prefix: 'border-image-outset-', cssProperty: 'border-image-outset', variablePrefix: 'borderImageOutset', requiresRemAdjustment: true },
  { prefix: 'border-image-slice-', cssProperty: 'border-image-slice', variablePrefix: 'borderImageSlice', requiresRemAdjustment: false },
  { prefix: 'border-spacing-', cssProperty: 'border-spacing', variablePrefix: 'borderSpacing', requiresRemAdjustment: true },
  { prefix: 'column-rule-', cssProperty: 'column-rule-width', variablePrefix: 'columnRuleWidth', requiresRemAdjustment: true },

  // Layout and Positioning
  { prefix: 'top-', cssProperty: 'top', variablePrefix: 'top', requiresRemAdjustment: true },
  { prefix: 'right-', cssProperty: 'right', variablePrefix: 'right', requiresRemAdjustment: true },
  { prefix: 'bottom-', cssProperty: 'bottom', variablePrefix: 'bottom', requiresRemAdjustment: true },
  { prefix: 'left-', cssProperty: 'left', variablePrefix: 'left', requiresRemAdjustment: true },
  { prefix: 'inset-', cssProperty: 'inset', variablePrefix: 'inset', requiresRemAdjustment: true },
  { prefix: 'translate-x-', cssProperty: 'translate-x', variablePrefix: 'translateX', requiresRemAdjustment: true },
  { prefix: 'translate-y-', cssProperty: 'translate-y', variablePrefix: 'translateY', requiresRemAdjustment: true },
  { prefix: 'rotate-', cssProperty: 'rotate', variablePrefix: 'rotate', requiresRemAdjustment: false },
  { prefix: 'scale-', cssProperty: 'scale', variablePrefix: 'scale', requiresRemAdjustment: false },
  { prefix: 'skew-x-', cssProperty: 'skew-x', variablePrefix: 'skewX', requiresRemAdjustment: false },
  { prefix: 'skew-y-', cssProperty: 'skew-y', variablePrefix: 'skewY', requiresRemAdjustment: false },
  { prefix: 'transform-origin-', cssProperty: 'transform-origin', variablePrefix: 'transformOrigin', requiresRemAdjustment: true },
  { prefix: 'perspective-', cssProperty: 'perspective', variablePrefix: 'perspective', requiresRemAdjustment: true },
  { prefix: 'perspective-origin-', cssProperty: 'perspective-origin', variablePrefix: 'perspectiveOrigin', requiresRemAdjustment: true },

  // Grid and Flexbox
  { prefix: 'grid-cols-', cssProperty: 'grid-template-columns', variablePrefix: 'gridTemplateColumns', requiresRemAdjustment: true },
  { prefix: 'grid-rows-', cssProperty: 'grid-template-rows', variablePrefix: 'gridTemplateRows', requiresRemAdjustment: true },
  { prefix: 'row-start-', cssProperty: 'grid-row-start', variablePrefix: 'gridRowStart', requiresRemAdjustment: false },
  { prefix: 'row-end-', cssProperty: 'grid-row-end', variablePrefix: 'gridRowEnd', requiresRemAdjustment: false },
  { prefix: 'col-start-', cssProperty: 'grid-column-start', variablePrefix: 'gridColumnStart', requiresRemAdjustment: false },
  { prefix: 'col-end-', cssProperty: 'grid-column-end', variablePrefix: 'gridColumnEnd', requiresRemAdjustment: false },
  { prefix: 'flex-', cssProperty: 'flex', variablePrefix: 'flex', requiresRemAdjustment: false },
  { prefix: 'basis-', cssProperty: 'flex-basis', variablePrefix: 'flexBasis', requiresRemAdjustment: true },

  // Background and Images
  { prefix: 'bg-', cssProperty: 'background', variablePrefix: 'background', requiresRemAdjustment: false },
  { prefix: 'bg-pos-x-', cssProperty: 'background-position-x', variablePrefix: 'backgroundPositionX', requiresRemAdjustment: true },
  { prefix: 'bg-pos-y-', cssProperty: 'background-position-y', variablePrefix: 'backgroundPositionY', requiresRemAdjustment: true },
  { prefix: 'bg-repeat-', cssProperty: 'background-repeat', variablePrefix: 'backgroundRepeat', requiresRemAdjustment: false },
  { prefix: 'bg-clip-', cssProperty: 'background-clip', variablePrefix: 'backgroundClip', requiresRemAdjustment: false },
  { prefix: 'mask-size-', cssProperty: 'mask-size', variablePrefix: 'maskSize', requiresRemAdjustment: true },
  { prefix: 'mask-position-', cssProperty: 'mask-position', variablePrefix: 'maskPosition', requiresRemAdjustment: true },
  { prefix: 'mask-border-width-', cssProperty: 'mask-border-width', variablePrefix: 'maskBorderWidth', requiresRemAdjustment: true },
  { prefix: 'mask-border-outset-', cssProperty: 'mask-border-outset', variablePrefix: 'maskBorderOutset', requiresRemAdjustment: true },
  { prefix: 'mask-border-slice-', cssProperty: 'mask-border-slice', variablePrefix: 'maskBorderSlice', requiresRemAdjustment: false },

  // Animation and Transition
  { prefix: 'transition-', cssProperty: 'transition', variablePrefix: 'transition', requiresRemAdjustment: false },
  { prefix: 'animation-', cssProperty: 'animation', variablePrefix: 'animation', requiresRemAdjustment: false },
  { prefix: 'animation-duration-', cssProperty: 'animation-duration', variablePrefix: 'animationDuration', requiresRemAdjustment: false },
  { prefix: 'animation-delay-', cssProperty: 'animation-delay', variablePrefix: 'animationDelay', requiresRemAdjustment: false },
  { prefix: 'animation-timing-', cssProperty: 'animation-timing-function', variablePrefix: 'animationTimingFunction', requiresRemAdjustment: false },

  // Scrolling
  { prefix: 'scroll-m-', cssProperty: 'scroll-margin', variablePrefix: 'scrollMargin', requiresRemAdjustment: true },
  { prefix: 'scroll-mt-', cssProperty: 'scroll-margin-top', variablePrefix: 'scrollMarginTop', requiresRemAdjustment: true },
  { prefix: 'scroll-mb-', cssProperty: 'scroll-margin-bottom', variablePrefix: 'scrollMarginBottom', requiresRemAdjustment: true },
  { prefix: 'scroll-ml-', cssProperty: 'scroll-margin-left', variablePrefix: 'scrollMarginLeft', requiresRemAdjustment: true },
  { prefix: 'scroll-mr-', cssProperty: 'scroll-margin-right', variablePrefix: 'scrollMarginRight', requiresRemAdjustment: true },
  { prefix: 'scroll-p-', cssProperty: 'scroll-padding', variablePrefix: 'scrollPadding', requiresRemAdjustment: true },
  { prefix: 'scroll-pt-', cssProperty: 'scroll-padding-top', variablePrefix: 'scrollPaddingTop', requiresRemAdjustment: true },
  { prefix: 'scroll-pb-', cssProperty: 'scroll-padding-bottom', variablePrefix: 'scrollPaddingBottom', requiresRemAdjustment: true },
  { prefix: 'scroll-pl-', cssProperty: 'scroll-padding-left', variablePrefix: 'scrollPaddingLeft', requiresRemAdjustment: true },
  { prefix: 'scroll-pr-', cssProperty: 'scroll-padding-right', variablePrefix: 'scrollPaddingRight', requiresRemAdjustment: true },
  { prefix: 'scroll-snap-m-', cssProperty: 'scroll-snap-margin', variablePrefix: 'scrollSnapMargin', requiresRemAdjustment: true },
  { prefix: 'scroll-snap-align-', cssProperty: 'scroll-snap-align', variablePrefix: 'scrollSnapAlign', requiresRemAdjustment: false },
  { prefix: 'scroll-snap-stop-', cssProperty: 'scroll-snap-stop', variablePrefix: 'scrollSnapStop', requiresRemAdjustment: false },
  { prefix: 'scroll-snap-type-', cssProperty: 'scroll-snap-type', variablePrefix: 'scrollSnapType', requiresRemAdjustment: false },
  { prefix: 'scroll-behavior-', cssProperty: 'scroll-behavior', variablePrefix: 'scrollBehavior', requiresRemAdjustment: false },
  { prefix: 'scroll-timeline-', cssProperty: 'scroll-timeline', variablePrefix: 'scrollTimeline', requiresRemAdjustment: false },
  { prefix: 'scrollbar-width-', cssProperty: 'scrollbar-width', variablePrefix: 'scrollbarWidth', requiresRemAdjustment: true },
  { prefix: 'scrollbar-gutter-', cssProperty: 'scrollbar-gutter', variablePrefix: 'scrollbarGutter', requiresRemAdjustment: true },

  // Miscellaneous
  { prefix: 'accent-', cssProperty: 'accent-color', variablePrefix: 'accentColor', requiresRemAdjustment: false },
  { prefix: 'align-', cssProperty: 'vertical-align', variablePrefix: 'verticalAlign', requiresRemAdjustment: true },
  { prefix: 'appearance-', cssProperty: 'appearance', variablePrefix: 'appearance', requiresRemAdjustment: false },
  { prefix: 'aspect-', cssProperty: 'aspect-ratio', variablePrefix: 'aspectRatio', requiresRemAdjustment: false },
  { prefix: 'backdrop-', cssProperty: 'backdrop-filter', variablePrefix: 'backdropFilter', requiresRemAdjustment: true },
  { prefix: 'baseline-shift-', cssProperty: 'baseline-shift', variablePrefix: 'baselineShift', requiresRemAdjustment: true },
  { prefix: 'blur-', cssProperty: 'blur', variablePrefix: 'blur', requiresRemAdjustment: true },
  { prefix: 'caption-side-', cssProperty: 'caption-side', variablePrefix: 'captionSide', requiresRemAdjustment: false },
  { prefix: 'clear-', cssProperty: 'clear', variablePrefix: 'clear', requiresRemAdjustment: false },
  { prefix: 'clip-path-', cssProperty: 'clip-path', variablePrefix: 'clipPath', requiresRemAdjustment: true },
  { prefix: 'columns-', cssProperty: 'columns', variablePrefix: 'columns', requiresRemAdjustment: true },
  { prefix: 'container-type-', cssProperty: 'container-type', variablePrefix: 'containerType', requiresRemAdjustment: false },
  { prefix: 'container-name-', cssProperty: 'container-name', variablePrefix: 'containerName', requiresRemAdjustment: false },
  { prefix: 'content-', cssProperty: 'content', variablePrefix: 'content', requiresRemAdjustment: false },
  { prefix: 'counter-increment-', cssProperty: 'counter-increment', variablePrefix: 'counterIncrement', requiresRemAdjustment: false },
]
module.exports = properties;